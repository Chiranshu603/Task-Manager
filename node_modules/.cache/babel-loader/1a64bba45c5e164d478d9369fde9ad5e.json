{"ast":null,"code":"var _jsxFileName = \"D:\\\\CHIRU\\\\CU\\\\5th SEM Chitkara Uni\\\\Back_End_CS187\\\\Projects_ST1\\\\DragDrop-Task-Manager-main\\\\DragDrop-Task-Manager-main\\\\src\\\\Components\\\\Notes.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Notes.css\";\nimport Card from \"./Card/Card\";\nimport Header from \"./Header/Header\";\n\nfunction AppNotes() {\n  const [tasks, setTasks] = useState([{\n    title: \"Enter a Task Header\",\n    body: 'Description here \\n<-- Use the icons to set the task \\n \"In-progress\" or \"Completed\" -->',\n    id: Date.now(),\n    stage: \"todo\"\n  }]);\n  const [stageToShow, setStageToShow] = useState(\"\");\n  useEffect(() => {\n    // Load tasks from local storage if they exist\n    const savedTasks = localStorage.getItem(\"tasks\");\n\n    if (savedTasks) {\n      setTasks(JSON.parse(savedTasks));\n    }\n  }, []);\n  useEffect(() => {\n    // Save tasks to local storage whenever they change\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  const titleHandler = (title, id) => {\n    const allTasks = tasks.map(task => {\n      if (task.id === id) {\n        task.title = title;\n      }\n\n      return task;\n    });\n    setTasks(allTasks);\n  };\n\n  const bodyHandler = (body, id) => {\n    const allTasks = tasks.map(task => {\n      if (task.id === id) {\n        task.body = body;\n      }\n\n      return task;\n    });\n    setTasks(allTasks);\n  };\n\n  const stageHandler = (stage, id) => {\n    const allTasks = tasks.map(task => {\n      if (task.id === id) {\n        task.stage = stage;\n      }\n\n      return task;\n    });\n    setTasks(allTasks);\n  };\n\n  const addNewCard = () => {\n    const allTasks = [...tasks];\n    allTasks.push({\n      title: \"Enter Task Header\",\n      body: 'Enter Description Here',\n      id: Date.now(),\n      stage: \"todo\"\n    });\n    setTasks(allTasks);\n  };\n\n  const closeHandler = id => {\n    const allTasks = tasks.filter(task => {\n      if (task.id !== id) {\n        return true;\n      } else {\n        const card = document.getElementById(id);\n\n        if (document.getElementById(\"containerDiv\").contains(card)) {\n          ReactDOM.unmountComponentAtNode(card);\n        }\n\n        return false;\n      }\n    });\n    setTasks(allTasks);\n  };\n\n  const drop = e => {\n    if (!e.preventDefault()) {\n      e.preventDefault();\n      const card_id = e.dataTransfer.getData(\"card_id\");\n      const card = document.getElementById(card_id);\n      const containerDiv = document.getElementById(\"containerDiv\");\n      const addNewCard = document.getElementById(\"addNewCard\");\n      const afterElement = getDragAfterElement(containerDiv, e.clientX, e.clientY);\n\n      if (card) {\n        card.style.display = \"block\";\n        ReactDOM.unmountComponentAtNode(addNewCard);\n\n        if (afterElement == null) {\n          containerDiv.appendChild(card);\n        } else {\n          containerDiv.insertBefore(card, afterElement);\n        }\n\n        containerDiv.appendChild(addNewCard);\n      }\n    }\n  };\n\n  function getDragAfterElement(container, x, y) {\n    const draggableElements = [...container.querySelectorAll(\".notesWrapper:not(.dragging):not(.new__note)\")];\n    return draggableElements.reduce((closest, child) => {\n      const box = child.getBoundingClientRect();\n      const offsetX = x - (box.left + box.width / 2);\n      const offsetY = y - (box.top + box.height / 2);\n      const offset = (offsetX + offsetY) / 2;\n\n      if (offset < 0 && offset > closest.offset) {\n        return {\n          offset: offset,\n          element: child\n        };\n      } else {\n        return closest;\n      }\n    }, {\n      offset: Number.NEGATIVE_INFINITY\n    }).element;\n  }\n\n  const dragOver = e => e.preventDefault();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    setStageToShow: setStageToShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    id: \"containerDiv\",\n    onDrop: drop,\n    onDragOver: dragOver,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, tasks.map((task, id) => {\n    if (task.stage === stageToShow || stageToShow === \"\") {\n      return /*#__PURE__*/React.createElement(Card, {\n        key: task.id,\n        task: task,\n        id: task.id,\n        stageHandler: stageHandler,\n        titleHandler: titleHandler,\n        bodyHandler: bodyHandler,\n        closeHandler: closeHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }\n      });\n    } else {\n      return null;\n    }\n  }), stageToShow === \"\" ? /*#__PURE__*/React.createElement(\"div\", {\n    id: \"addNewCard\",\n    className: \"notesWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note new__note todo\",\n    onClick: addNewCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  }))))) : null));\n}\n\nexport default AppNotes;","map":{"version":3,"sources":["D:/CHIRU/CU/5th SEM Chitkara Uni/Back_End_CS187/Projects_ST1/DragDrop-Task-Manager-main/DragDrop-Task-Manager-main/src/Components/Notes.js"],"names":["React","useState","useEffect","ReactDOM","Card","Header","AppNotes","tasks","setTasks","title","body","id","Date","now","stage","stageToShow","setStageToShow","savedTasks","localStorage","getItem","JSON","parse","setItem","stringify","titleHandler","allTasks","map","task","bodyHandler","stageHandler","addNewCard","push","closeHandler","filter","card","document","getElementById","contains","unmountComponentAtNode","drop","e","preventDefault","card_id","dataTransfer","getData","containerDiv","afterElement","getDragAfterElement","clientX","clientY","style","display","appendChild","insertBefore","container","x","y","draggableElements","querySelectorAll","reduce","closest","child","box","getBoundingClientRect","offsetX","left","width","offsetY","top","height","offset","element","Number","NEGATIVE_INFINITY","dragOver"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./Notes.css\";\nimport Card from \"./Card/Card\";\nimport Header from \"./Header/Header\";\n\nfunction AppNotes() {\n  const [tasks, setTasks] = useState([\n    {\n      title: \"Enter a Task Header\",\n      body:\n        'Description here \\n<-- Use the icons to set the task \\n \"In-progress\" or \"Completed\" -->',\n      id: Date.now(),\n      stage: \"todo\",\n    },\n  ]);\n\n  const [stageToShow, setStageToShow] = useState(\"\");\n\n  useEffect(() => {\n    // Load tasks from local storage if they exist\n    const savedTasks = localStorage.getItem(\"tasks\");\n    if (savedTasks) {\n      setTasks(JSON.parse(savedTasks));\n    }\n  }, []);\n\n  useEffect(() => {\n    // Save tasks to local storage whenever they change\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  const titleHandler = (title, id) => {\n    const allTasks = tasks.map((task) => {\n      if (task.id === id) {\n        task.title = title;\n      }\n      return task;\n    });\n    setTasks(allTasks);\n  };\n\n  const bodyHandler = (body, id) =>{\n    const allTasks = tasks.map((task) => {\n      if (task.id === id) {\n        task.body = body;\n      }\n      return task;\n    });\n    setTasks(allTasks);\n  };\n\n  const stageHandler = (stage, id) => {\n    const allTasks = tasks.map((task) => {\n      if (task.id === id) {\n        task.stage = stage;\n      }\n      return task;\n    });\n    setTasks(allTasks);\n  };\n\n  const addNewCard = () => {\n    const allTasks = [...tasks];\n    allTasks.push({\n      title: \"Enter Task Header\",\n      body:\n        'Enter Description Here',\n      id: Date.now(),\n      stage: \"todo\",\n    });\n    setTasks(allTasks);\n  };\n\n  const closeHandler = (id) => {\n    const allTasks = tasks.filter((task) => {\n      if (task.id !== id) {\n        return true;\n      } else {\n        const card = document.getElementById(id);\n        if (document.getElementById(\"containerDiv\").contains(card)) {\n          ReactDOM.unmountComponentAtNode(card);\n        }\n        return false;\n      }\n    });\n    setTasks(allTasks);\n  };\n\n  const drop = (e) => {\n    if (!e.preventDefault()) {\n      e.preventDefault();\n      const card_id = e.dataTransfer.getData(\"card_id\");\n      const card = document.getElementById(card_id);\n      const containerDiv = document.getElementById(\"containerDiv\");\n      const addNewCard = document.getElementById(\"addNewCard\");\n      const afterElement = getDragAfterElement(\n        containerDiv,\n        e.clientX,\n        e.clientY\n      );\n      if (card) {\n        card.style.display = \"block\";\n        ReactDOM.unmountComponentAtNode(addNewCard);\n        if (afterElement == null) {\n          containerDiv.appendChild(card);\n        } else {\n          containerDiv.insertBefore(card, afterElement);\n        }\n        containerDiv.appendChild(addNewCard);\n      }\n    }\n  };\n\n  function getDragAfterElement(container, x, y) {\n    const draggableElements = [\n      ...container.querySelectorAll(\n        \".notesWrapper:not(.dragging):not(.new__note)\"\n      ),\n    ];\n    return draggableElements.reduce(\n      (closest, child) => {\n        const box = child.getBoundingClientRect();\n        const offsetX = x - (box.left + box.width / 2);\n        const offsetY = y - (box.top + box.height / 2);\n        const offset = (offsetX + offsetY) / 2;\n\n        if (offset < 0 && offset > closest.offset) {\n          return { offset: offset, element: child };\n        } else {\n          return closest;\n        }\n      },\n      { offset: Number.NEGATIVE_INFINITY }\n    ).element;\n  }\n\n  const dragOver = (e) => e.preventDefault();\n\n return (\n    <div className=\"App\">\n      <Header setStageToShow={setStageToShow} />\n\n      <div\n        className=\"container\"\n        id=\"containerDiv\"\n        onDrop={drop}\n        onDragOver={dragOver}\n      >\n        {tasks.map((task, id) => {\n          if (task.stage === stageToShow || stageToShow === \"\") {\n            return (\n              <Card\n                key={task.id}\n                task={task}\n                id={task.id}\n                stageHandler={stageHandler}\n                titleHandler={titleHandler}\n                bodyHandler={bodyHandler}\n                closeHandler={closeHandler}\n              />\n            );\n          } else {\n            return null;\n          }\n        })}\n        {stageToShow === \"\" ? (\n          <div id=\"addNewCard\" className=\"notesWrapper\">\n            <div className=\"notes\">\n              <div className=\"note new__note todo\" onClick={addNewCard}>\n                <span>\n                  <i className=\"fas fa-plus\"></i>\n                </span>\n              </div>\n            </div>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default AppNotes;"]},"metadata":{},"sourceType":"module"}